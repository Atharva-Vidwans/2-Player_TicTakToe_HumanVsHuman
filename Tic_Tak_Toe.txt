#include <stdio.h>
#include<stdlib.h>

void decide_winner(char array[3][3],int row,int column)
{
    if (array[row][column]=='x')
      printf("\n\nCONGRATS !! \n\nWinner is Player %d",1);
    else if (array[row][column]=='o')
      printf("\n\nCONGRATS !! \n\nWinner is Player %d",2);  
}

int draw(int row, int column ,char array[3][3] ,int count)
{
    int flag=0;
    if (array[row][column]=='*')
    {
        if (count%2==0)
            array[row][column]='x';
        else
            array[row][column]='o';
        return 1;
    }
    
    else
    {
        printf("Enter some other value");
        return 0;
    }
}

void print(char array[3][3])
{
    int i=0,j=0;
    for (i=0;i<=2;i++)
    {
        for (j=0;j<=2;j++)
        {
            printf("%c",array[i][j]);
            printf("     ");
        }
        printf("\n");
    }
}

int check(char array[3][3])
{
    int game_over=0,i=0,j=0,count=0,temp1=0,temp2=0,temp3=0;
    
    
    for (i=0;i<=2;i++)
    {
        temp1=temp1+(int)array[0][i];
        temp2=temp2+(int)array[1][i];
        temp3=temp3+(int)array[2][i];
    }
    if ((temp1==3*(int)array[0][0])&&(array[0][0]!='*'))
    {
        decide_winner(array,0,0);
        return game_over=1;
    }  
      
    if ((temp2==3*(int)array[1][0])&&(array[1][0]!='*'))
    {
      decide_winner(array,1,0);
      return game_over=1;
    }
          
    if ((temp3==3*(int)array[2][0])&&(array[2][0]!='*'))
    {
      decide_winner(array,2,0);
      return game_over=1;
    }

    temp1=0,temp2=0,temp3=0;
    
    for (i=0;i<=2;i++)
    {
        temp1=temp1+(int)array[i][0];
        temp2=temp2+(int)array[i][1];
        temp3=temp3+(int)array[i][2];
    }
    if ((temp1==3*(int)array[0][0])&&(array[0][0]!='*'))
    {
      decide_winner(array,0,0);
      return game_over=1;
    }
    if ((temp2==3*(int)array[0][1])&&(array[0][1]!='*'))
    {
      decide_winner(array,0,1);
      return game_over=1;
    }
    if ((temp3==3*(int)array[0][2])&&(array[0][2]!='*'))
    {
      decide_winner(array,0,2);
      return game_over=1;
    }
        
    temp1=0,temp2=0,temp3=0;
    
    for (i=0;i<=2;i++)
    {
        for (j=0;j<=2;j++)
        {
            if ((i+j)==2)
                temp2=temp2+(int)array[i][j];
            if (i==j)
                temp1=temp1+(int)array[i][j];
        }
            
    }
    if ((temp1==3*(int)array[0][0])&&(array[0][0]!='*'))
    {
      decide_winner(array,0,0);
      return game_over=1;
    }
    if ((temp2==3*(int)array[0][2])&&(array[0][2]!='*'))
    {
      decide_winner(array,0,2);
      return game_over=1;
    }
    else
        return game_over=0;   
}

int draw_match(char array[3][3])
{
  int i=0,j=0;
  int count=0;
  for (i=0;i<=2;i++)
  {
    for (j=0;j<=2;j++)
    {
        if (array[i][j]=='*')
          count++;
    }
  }
if (count==0)
{
  printf("\n\nI'ts a DRAW !!");
  return 1;
}
else 
  return 0;

}

int main()
{
    system("clear");
    char x='x',o='o';
    int i=0,j=0,row=0,column=0,count=2,flag=0,game_over=0;
    char array[3][3];

    for (i=0;i<=2;i++)
    {
        for (j=0;j<=2;j++)
        {
            array[i][j]='*';
        }
    }
    
    
    printf("TIK TAK TOE\n\n");
    
    printf("INSTRUCTIONS :\n\n");
    printf("1) Indexing starts from 0 and ends at 2\n");
    printf("2) That is 0 0 indicates top-left position and 2 2 indicates bottom-right position\n");
    printf("3) Player 1 plays as \'X\'\n");
    printf("4) Player 2 plays as \'O\'\n\n");
    
    print(array);
    printf("\n\n");
    while (game_over==0)
    {
        printf("Player %d : ",(count%2)+1);
        scanf("%d",&row);
        scanf("%d",&column);
        while(flag==0)
        {
            flag=draw(row,column,array,count);
            if (flag==0)
            {
                scanf("%d",&row);
                scanf("%d",&column);
            }
        }
        print(array);
        game_over=check(array);
        game_over=draw_match(array);
        count++;
        flag=0;
    }
  return 0;
}
